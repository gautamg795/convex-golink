/*
Convex App - OpenAPI 3.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ResponseStatsLoadStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponseStatsLoadStats{}

// ResponseStatsLoadStats struct for ResponseStatsLoadStats
type ResponseStatsLoadStats struct {
	Status string `json:"status"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	ErrorData map[string]interface{} `json:"errorData,omitempty"`
	Value interface{} `json:"value,omitempty"`
}

type _ResponseStatsLoadStats ResponseStatsLoadStats

// NewResponseStatsLoadStats instantiates a new ResponseStatsLoadStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseStatsLoadStats(status string) *ResponseStatsLoadStats {
	this := ResponseStatsLoadStats{}
	this.Status = status
	return &this
}

// NewResponseStatsLoadStatsWithDefaults instantiates a new ResponseStatsLoadStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseStatsLoadStatsWithDefaults() *ResponseStatsLoadStats {
	this := ResponseStatsLoadStats{}
	return &this
}

// GetStatus returns the Status field value
func (o *ResponseStatsLoadStats) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ResponseStatsLoadStats) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ResponseStatsLoadStats) SetStatus(v string) {
	o.Status = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *ResponseStatsLoadStats) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStatsLoadStats) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ResponseStatsLoadStats) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *ResponseStatsLoadStats) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetErrorData returns the ErrorData field value if set, zero value otherwise.
func (o *ResponseStatsLoadStats) GetErrorData() map[string]interface{} {
	if o == nil || IsNil(o.ErrorData) {
		var ret map[string]interface{}
		return ret
	}
	return o.ErrorData
}

// GetErrorDataOk returns a tuple with the ErrorData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseStatsLoadStats) GetErrorDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ErrorData) {
		return map[string]interface{}{}, false
	}
	return o.ErrorData, true
}

// HasErrorData returns a boolean if a field has been set.
func (o *ResponseStatsLoadStats) HasErrorData() bool {
	if o != nil && !IsNil(o.ErrorData) {
		return true
	}

	return false
}

// SetErrorData gets a reference to the given map[string]interface{} and assigns it to the ErrorData field.
func (o *ResponseStatsLoadStats) SetErrorData(v map[string]interface{}) {
	o.ErrorData = v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponseStatsLoadStats) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponseStatsLoadStats) GetValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ResponseStatsLoadStats) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *ResponseStatsLoadStats) SetValue(v interface{}) {
	o.Value = v
}

func (o ResponseStatsLoadStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponseStatsLoadStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.ErrorData) {
		toSerialize["errorData"] = o.ErrorData
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

func (o *ResponseStatsLoadStats) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResponseStatsLoadStats := _ResponseStatsLoadStats{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varResponseStatsLoadStats)

	if err != nil {
		return err
	}

	*o = ResponseStatsLoadStats(varResponseStatsLoadStats)

	return err
}

type NullableResponseStatsLoadStats struct {
	value *ResponseStatsLoadStats
	isSet bool
}

func (v NullableResponseStatsLoadStats) Get() *ResponseStatsLoadStats {
	return v.value
}

func (v *NullableResponseStatsLoadStats) Set(val *ResponseStatsLoadStats) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseStatsLoadStats) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseStatsLoadStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseStatsLoadStats(val *ResponseStatsLoadStats) *NullableResponseStatsLoadStats {
	return &NullableResponseStatsLoadStats{value: val, isSet: true}
}

func (v NullableResponseStatsLoadStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseStatsLoadStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


