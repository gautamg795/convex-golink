/*
Convex App - OpenAPI 3.0

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RequestTestTMutationArgs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestTestTMutationArgs{}

// RequestTestTMutationArgs struct for RequestTestTMutationArgs
type RequestTestTMutationArgs struct {
	Union *RequestTestTMutationArgsUnion `json:"union,omitempty"`
}

// NewRequestTestTMutationArgs instantiates a new RequestTestTMutationArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTestTMutationArgs() *RequestTestTMutationArgs {
	this := RequestTestTMutationArgs{}
	return &this
}

// NewRequestTestTMutationArgsWithDefaults instantiates a new RequestTestTMutationArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTestTMutationArgsWithDefaults() *RequestTestTMutationArgs {
	this := RequestTestTMutationArgs{}
	return &this
}

// GetUnion returns the Union field value if set, zero value otherwise.
func (o *RequestTestTMutationArgs) GetUnion() RequestTestTMutationArgsUnion {
	if o == nil || IsNil(o.Union) {
		var ret RequestTestTMutationArgsUnion
		return ret
	}
	return *o.Union
}

// GetUnionOk returns a tuple with the Union field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTestTMutationArgs) GetUnionOk() (*RequestTestTMutationArgsUnion, bool) {
	if o == nil || IsNil(o.Union) {
		return nil, false
	}
	return o.Union, true
}

// HasUnion returns a boolean if a field has been set.
func (o *RequestTestTMutationArgs) HasUnion() bool {
	if o != nil && !IsNil(o.Union) {
		return true
	}

	return false
}

// SetUnion gets a reference to the given RequestTestTMutationArgsUnion and assigns it to the Union field.
func (o *RequestTestTMutationArgs) SetUnion(v RequestTestTMutationArgsUnion) {
	o.Union = &v
}

func (o RequestTestTMutationArgs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestTestTMutationArgs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Union) {
		toSerialize["union"] = o.Union
	}
	return toSerialize, nil
}

type NullableRequestTestTMutationArgs struct {
	value *RequestTestTMutationArgs
	isSet bool
}

func (v NullableRequestTestTMutationArgs) Get() *RequestTestTMutationArgs {
	return v.value
}

func (v *NullableRequestTestTMutationArgs) Set(val *RequestTestTMutationArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTestTMutationArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTestTMutationArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTestTMutationArgs(val *RequestTestTMutationArgs) *NullableRequestTestTMutationArgs {
	return &NullableRequestTestTMutationArgs{value: val, isSet: true}
}

func (v NullableRequestTestTMutationArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTestTMutationArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


